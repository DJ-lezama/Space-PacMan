using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PacMan
{
    internal class Map
    {
        public char[,] level = new char[,] { };
        private Pacman pacman;
        
        public Map()
        {
            level = new char[,] {
            {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
            {'0','2','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1', '1', '1', '1', '1', '1', 'P', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '2', '0'},
            {'0','1', '1', '0', '0', '1', '1', '1', '1', '1', '0','1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '0', '0', '1', '1', '0'},
            {'0','1', '1', '1', '1', '1', '0', '0', '0', '1', '0','1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0'},
            {'0','1','1','1','1','1','0','1','1','1','1','1','0','1','0','1','1','0','1','1','1','0','0','1','1','1','0','1','1','0','1','0','1','1','1','1','1','0','1','1','1','1','1','0'},
            {'0','1','1','0','1','1','0','1','0','0','0','0','0','1','1','1','1','0','1','1','0','0','0','0','1','1','0','1','1','1','1','0','0','0','0','0','1','0','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','0','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','0','0','0','1','0','0','0','0','0','0','1','0','0','0','0','0','0','0','0','0','0','1','0','0','0','0','0','0','1','0','0','0','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','1','1','0','1','0','1','1','1','1','1','1','1','1','1','1','1','1','0','1','0','1','1','1','1','1','1','1','1','1','0','1','1','0'},
            {'0', '0','1','0','0','0','0','0','0','0','0','1','1','0','1','0','1','0','0','0','0','1','1','0','0','0','0','1','0','1','0','1','1','0','0','0','0','0','0','0','0','1','0','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','0','A','1','1','1','1','1','1','C','0','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','0','1','1','1','1','1','1','1','1','0','1','0','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','0','0','0','0','0','0','0','0','1','0','1','0','B','1','1','1','1','1','1','D','0','1','0','1','0','0','0','0','0','0','0','0','1','1','0','1','1','0' },
            {'0','1','1','0','1','1','0','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','0' },
            {'0','1','1','0','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','0','1','1','0' }, 
            {'0','1','1','1','1','1','0','1','1','0','0','0','0','0','0','0','1','1','1','1','1','1','1','1','1','1','1','1','0','0','0','0','0','0','0','1','1','0','1','1','1','1','1','0' },
            {'0','1','1','1','1','1','0','1','1','1','1','0','1','1','1','1','1','0','0','0','0','0','0','0','0','0','0','1','1','1','1','1','0','1','1','1','1','0','1','1','1','1','1','0' }, 
            {'0','1','1','1','1','1','0','1','1','1','1','0','1','1','1','1','1','0','1','1','1','1','1','1','1','1','0','1','1','1','1','1','0','1','1','1','1','0','1','1','1','1','1','0' },
            {'0','1','1','0','1','1','0','0','0','0','1','0','1','1','0','1','1','0','1','0','0','0','0','0','0','1','0','1','1','0','1','1','0','1','0','0','0','0','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','0','1','1','0','1','1','1','1','1','1','0','0','1','1','1','1','1','1','0','1','1','0','1','1','1','1','1','1','1','0','1','1','0'},
            {'0','1','1','0','1','1','1','1','1','1','1','0','1','1','0','0','0','0','0','1','1','0','0','1','1','0','0','0','0','0','1','1','0','1','1','1','1','1','1','1','0','1','1','0'},
            {'0','1','1','0','0','0','0','0','1','1','1','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','1','1','1','0','0','0','0','0','1','1','0'},
            {'0','2','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','0','0','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','1','2','0'},
            {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'},
            };

        }

        public void SetPacman(Pacman pacman)
        {
            this.pacman = pacman;
        }

        // Checks if the specified position is passable (not a wall).
        public bool IsPassable(int x, int y)
        {
            // Check bounds first to avoid index out of range errors.
            if (x < 0 || x >= level.GetLength(1) || y < 0 || y >= level.GetLength(0))
            {
                return false; // Position out of bounds is considered impassable.
            }

            return level[y, x] != '0'; // '0' represents a wall, which is not passable.
        }

        public int Score { get; set; } = 0;

        public void EatPillOrPellet(int pacmanX, int pacmanY, Pacman pacman)
        {
            if (level[pacmanY, pacmanX] == '1') // Normal pill
            {
                Score += 10; // Increase score by 10 for normal pill.
                level[pacmanY, pacmanX] = ' '; // Remove the pill from the map.
            }
            else if (level[pacmanY, pacmanX] == '2') // Power pellet
            {
                Score += 50; // Increase score by 50 for power pellet.
                level[pacmanY, pacmanX] = ' '; // Remove the power pellet from the map.
                pacman.poweredUp = true;
                
            }
        }

        public void GhostCollisions(Pacman pacman, List<Ghost> ghosts)
        {
            foreach (Ghost ghost in ghosts)
            {
                if (pacman.X == ghost.x && pacman.Y == ghost.y)
                {
                    if (pacman.poweredUp)
                    {
                        ghost.HandleBeingEaten();
                    }
                    else
                    {
                        pacman.HandleBeingEaten();
                    }
                }
            }
        }
    }

}
